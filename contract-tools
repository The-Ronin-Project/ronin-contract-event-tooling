#!/usr/bin/env bash
VERSIONS=$(ls | grep -E '^v\d+$')

case $1 in

    test)
        echo "Testing schemas"
        ./gradlew --no-daemon check
        ;;

    doc)
        echo Generating documentation
        if [[ -e ./build/docs ]]; then
          rm -rf ./build/docs
        fi
        mkdir -p ./build/docs
        output=$(generate-schema-doc "./src/main/resources/schemas/*.schema.json" ./build/docs)
        success=$?
        echo ${output}
        if [[ ${success} -ne 0 ]]; then
            exit 1
        fi
        ;;

    clean)
        echo "Cleaning generated files"
        ./gradlew --no-daemon clean
        ;;

    initialize)
        echo "Initializing the project with the necessary gradle setup"
        gradle --no-daemon init --type basic --dsl kotlin
        if [[ ! -e ./src/main/resources ]]; then
          mkdir -p ./src/main/resources
        fi
        if [[ ! -e ./src/test/resources ]]; then
          mkdir -p ./src/test/resources
        fi
        cp /usr/local/initializer/* .
        cp /usr/local/initializer/.gitignore .
        lastVersion=$(find . -maxdepth 1 -name 'v*' -type d | tail -n1)
        if [[ -n "${lastVersion}" ]]; then
          mv "${lastVersion}/examples" ./src/test/resources
          mv "${lastVersion}" ./src/main/resources/schemas
        else
          if [[ ! -e ./src/main/resources/schemas ]]; then
            mkdir -p ./src/main/resources/schemas
          fi
          if [[ ! -e ./src/test/resources/examples ]]; then
            mkdir -p ./src/test/resources/examples
          fi
        fi
        ;;

    *)
        echo "Unknown command '$1'" >&2
        echo "Usage: contract-tools [test|doc|clean|initialize]" >&2
        ;;
esac
